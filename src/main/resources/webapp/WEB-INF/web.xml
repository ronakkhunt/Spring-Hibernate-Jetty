<web-app
    xmlns="http://java.sun.com/xml/ns/javaee" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<!--NOTE: `version="3.0"` above refers to the Servlet API 3.0  -->
	
	
	<!-- Configuring spring's DispatcherServlet 
		REFER: http://docs.spring.io/spring/docs/current/spring-framework-reference/html/mvc.html#mvc-servlet
		
		```
		Upon initialization of a DispatcherServlet, Spring MVC looks for a file named [servlet-name]-servlet.xml (dispatcher-servlet.xm
		in this case) in the WEB-INF directory of your web application and creates the beans defined there, overriding the definitions of 
		any beans defined with the same name in the global scope.
		```
	--> 
	<servlet>
	    <servlet-name>dispatcher</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
	    <servlet-name>dispatcher</servlet-name>
	    <url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- <servlet>
   		<servlet-name>jersey-serlvet</servlet-name>
   		<servlet-class>
   			org.glassfish.jersey.servlet.ServletContainer
   		</servlet-class>
   		<init-param>
   			<param-name>javax.ws.rs.Application</param-name>
   			<param-value>com.spring_jetty.api.DemoApplication</param-value>
   		</init-param>
   		<load-on-startup>1</load-on-startup>
   	</servlet>

   	<servlet-mapping>
   		<servlet-name>jersey-serlvet</servlet-name>
   		<url-pattern>/*</url-pattern>
   	</servlet-mapping>
 -->	
	
</web-app>